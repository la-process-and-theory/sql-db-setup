install.packages("DBI", "RMySQL")
install.packages(c("DBI", "RMySQL"))
library(DBI)
library(RMySQL)
db_user <- 'admin'
db_password <- 'testsql!'
db_name <- 'oudb'
db_host <- 'database-1.cvnrn4rmwkcz.us-east-2.rds.amazonaws.com'
db_port <- 3306
mydb <- dbConnect(MySQL(), user = db_user, password = db_password, dbname = db_name, host = db_host, port = db_port)
mydb <- dbConnect(MySQL(), user = db_user, password = db_password, dbname = db_name, host = db_host, port = db_port)
mydb <- dbConnect(MySQL(), user = db_user, password = db_password, dbname = db_name, host = db_host, port = db_port)
mydb <- dbConnect(MySQL(), user = db_user, password = db_password, dbname = db_name, host = db_host, port = db_port)
mydb <- dbConnect(MySQL(), user = db_user, password = db_password, dbname = db_name, host = db_host, port = db_port)
mydb <- dbConnect(MySQL(), user = db_user, password = db_password, dbname = db_name, host = db_host, port = db_port)
summary(mydb)
summary(mydb)
mydb <- dbConnect(MySQL(), user = db_user, password = db_password, dbname = db_name, host = db_host, port = db_port)
summary(mydb)
studentInfo <- read.csv("studentInfo.csv", header = TRUE)
studentAssessment <- read.csv("studentAssessment.csv", header = TRUE)
courses <- read.csv("courses.csv", header = TRUE)
studentRegistration <- read.csv("studentRegistration.csv", header = TRUE)
dbListTables(mydb)
dbWriteTable(mydb, "studentInfo", studentInfo)
dbWriteTable(mydb, "studentAssessment", studentAssessment)
dbWriteTable(mydb, "courses", courses)
dbWriteTable(mydb, "studentRegistration", studentRegistration)
dbListTables(mydb)
dbReadTable(mydb, 'studentInfo')
ToyAssessment <- read.csv("ToyAssessment.csv", header = TRUE)
library(DBI)
library(RMySQL)
mydb <- dbConnect(MySQL(), user = db_user, password = db_password, dbname = db_name, host = db_host, port = db_port)
ToyAssessment <- read.csv("ToyAssessment.csv", header = TRUE)
ToyInfo <- read.csv("ToyInfo.csv", header = TRUE)
dbListTables(mydb)
dbWriteTable(mydb, "ToyAssessment", ToyAssessment)
dbWriteTable(mydb, "ToyInfo", ToyInfo)
dbListTables(mydb)
dbReadTable(mydb, 'ToyInfo')
dbReadTable(mydb, 'ToyAssessment')
ToyAssessment <- read.csv("ToyAssessment.csv", header = TRUE)
ToyInfo <- read.csv("ToyInfo.csv", header = TRUE)
dbWriteTable(mydb, "ToyAssessment", ToyAssessment)
View(ToyInfo)
View(ToyInfo)
View(ToyInfo)
dbGetQuery(mydb, "ToyAssessment")
dbGetQuery(mydb, "ToyInfo")
dbWriteTable(mydb, "ToyAssessment", ToyAssessment)
View(ToyInfo)
View(ToyInfo)
dbGetQuery(mydb, "ToyInfo")
library(DBI)
library(RMySQL)
mydb <- dbConnect(MySQL(), user = db_user, password = db_password, dbname = db_name, host = db_host, port = db_port)
summary(mydb)
dbListTables(mydb)
ToyAssessment <- read.csv("ToyAssessment.csv", header = TRUE)
ToyInfo <- read.csv("ToyInfo.csv", header = TRUE)
dbWriteTable(mydb, "ToyAssessment", ToyAssessment)
dbGetQuery(mydb, "DROP TABLE test;")
dbGetQuery(mydb, "ToyAssessment")
View(ToyAssessment)
View(ToyAssessment)
dbListTables(mydb)
dbGetQuery(mydb, "ToyAssessment;")
dbGetQuery(mydb, "ToyInfo;")
dbGetQuery(mydb, "ToyInfo")
dbGetQuery(mydb, "studentAssessment")
dbGetQuery(mydb, "studentAssessment;")
dbWriteTable(mydb, "ToyAssessment", ToyAssessment1)
dbWriteTable(mydb, "ToyAssessment1", ToyAssessment)
View(ToyAssessment)
dbGetQuery(mydb, "ToyAssessment1;")
dbGetQuery(mydb, "ToyAssessment1")
ToyAssessment <- read.csv("ToyInfo.csv", header = TRUE)
ToyAssessment <- read.csv("ToyInfo.csv", header = TRUE)
ToyAssessment <- read.csv("ToyAssessment.csv", header = TRUE)
ToyAssessment <- read.csv("ToyAssessment1.csv", header = TRUE)
View(ToyAssessment)
View(ToyAssessment)
View(ToyInfo)
View(ToyInfo)
ToyAssessment <- read.csv("ToyAssessment.csv", header = TRUE)
dbGetQuery(mydb, "SELECT price, gender FROM ToyInfo ORDER BY price  DESC LIMIT 20;")
dbGetQuery(mydb, "SELECT price FROM ToyInfo ORDER BY price  DESC LIMIT 20;")
dbGetQuery(mydb, "SELECT price AS 'Price', brand, category_number FROM ToyInfo ORDER BY price DESC LIMIT 20;")
>ToyAssessment1 <- read.csv("ToyAssessment1.csv", header = TRUE)
ToyAssessment1 <- read.csv("ToyAssessment1.csv", header = TRUE)
rm(ToyAssessment)
rm(ToyInfo)
ToyInfo1 <- read.csv("ToyInfo1.csv", header = TRUE)
View(ToyAssessment1)
View(ToyAssessment1)
View(ToyInfo1)
View(ToyInfo1)
dbWriteTable(mydb, "ToyAssessment1", ToyAssessment1)
rm(ToyAssessment1)
rm(ToyInfo1)
Toy_assessment <- read.csv("Toy_assessment.csv", header = TRUE)
Toy_info <- read.csv("Toy_info.csv", header = TRUE)
dbWriteTable(mydb, "Toy_assessment", Toy_assessment)
dbWriteTable(mydb, "Toy_info", Toy_info)
###ex2###
View(Toy_info)
View(Toy_info)
dbGetQuery(mydb, "SELECT price AS 'Price', category_number, brand FROM Toy_info ORDER BY price DESC LIMIT 20;")
View(Toy_assessment)
View(Toy_assessment)
dbGetQuery(mydb, "SELECT COUNT(safety_test) FROM Toy_assessment WHERE safety_test = Pass;")
dbGetQuery(mydb, "SELECT COUNT(safety_test) FROM Toy_assessment WHERE safety_test = = Pass;")
dbGetQuery(mydb, "SELECT COUNT(safety_test) FROM Toy_assessment WHERE safety_test = 'Pass';")
dbGetQuery(mydb, "SELECT COUNT(safety_test) FROM Toy_assessment WHERE safety_test = 'Fail';")
dbGetQuery(mydb, "SELECT COUNT(quality_level) FROM Toy_assessment WHERE quality_level > 2;")
dbGetQuery(mydb, "SELECT COUNT(quality_level) FROM Toy_assessment WHERE quality_level <3 ;")
###exercise3###
dbGetQuery(mydb, "SELECT COUNT(*) FROM Toy_assessment;")
dbGetQuery(mydb, "INSERT INTO Toy_info (price, category_number, brand) VALUES ('1', '0', 'New');")
dbReaTable(mydb,'Toy_info')
dbReadTable(mydb,'Toy_info')
dbReadTable(mydb,Toy_info)
dbReadTable(mydb,'Toy_info')
dbReadTable(mydb,'ToyInfo')
dbReadTable(mydb,'Toy_assessment')
dbReadTable(mydb,'Toy_info')
dbGetQuery(mydb, "DELETE FROM Toy_info WHERE category_number = 0;")
dbWriteTable(mydb, "Toy_info", Toy_info)
dbReadTable(mydb,'Toy_info')
dbGetQuery(mydb, "INSERT INTO Toy_info (price, category_number, brand) VALUES ('1', '0', 'Inserted');")
dbReadTable(mydb,'Toy_info')
dbGetQuery(mydb, "DELETE FROM Toy_info WHERE category_number = 0;")
dbReadTable(mydb,'Toy_info')
dbGetQuery(mydb, "UPDATE Toy_assessment SET quality_level = '-1' WHERE id_student = 13098;")
summary(mydb)
dbGetQuery(mydb, "UPDATE Toy_assessment SET quality_level = '-1' WHERE id_student = 13098;")
mydb <- dbConnect(MySQL(), user = db_user, password = db_password, dbname = db_name, host = db_host, port = db_port)
summary(mydb)
dbGetQuery(mydb, "UPDATE Toy_assessment SET quality_level = '-1' WHERE id_student = 13098;")
dbGetQuery(mydb, "UPDATE Toy_assessment SET quality_level = '-1' WHERE factory_number = 13098;")
dbReadTable(mydb,'Toy_assessment')
dbGetQuery(mydb, "DELETE FROM Toy_assessment WHERE quality_level = -1;")
dbGetQuery(mydb, "SELECT COUNT(*) FROM Toy_assessment;")
dbGetQuery(mydb,"CREATE TABLE test (
score INTEGER,
student TEXT
);")
dbReadTable(mydb,'test')
dbGetQuery(mydb, "SELECT * FROM test;")
dbGetQuery(mydb, "SELECT * FROM Toy_info;")
dbReadTable(mydb,'test')
dbReadTable(mydb,'Toy_info')
dbGetQuery(mydb, "INSERT INTO test SELECT FROM Toy_info;")
dbGetQuery(mydb,"CREATE TABLE test (
ToyInfo NA,INTEGER,
student TEXT
);")
dbGetQuery(mydb,"CREATE TABLE test (
ToyInfo Null, price INTEGER, category_number INTEGER,
brand TEXT
);")
dbGetQuery(mydb,"CREATE TABLE test (
ToyInfo 'NA', price INTEGER, category_number INTEGER,
brand TEXT
);")
dbGetQuery(mydb,"CREATE TABLE test (
ToyInfo TEXT, price INTEGER, category_number INTEGER,
brand TEXT
);")
dbGetQuery(mydb,"CREATE TABLE Toy_info1 (
+   ToyInfo TEXT, price INTEGER, category_number INTEGER,
+   brand TEXT
+   );")
dbGetQuery(mydb,"CREATE TABLE Toy_info1 (
ToyInfo TEXT, price INTEGER, category_number INTEGER,   brand TEXT
);")
dbGetQuery(mydb, "INSERT INTO test VALUES SELECT FROM Toy_info;")
dbGetQuery(mydb,"INSERT INTO Toy_info1 (ToyInfo, price, category_number,brand) SELECTToyInfo, price, category_number,brand FROM Toy_info;")
dbGetQuery(mydb,"INSERT INTO Toy_infonew (ToyInfo, price, category_number,brand) SELECT ToyInfo, price, category_number,brand FROM Toy_info;")
dbGetQuery(mydb,"INSERT INTO Toy_info1 (ToyInfo, price, category_number,brand) SELECT ToyInfo, price, category_number,brand FROM Toy_info;")
dbWriteTable(mydb, "Toy_infonew", Toy_info)
dbReadTable(mydb,'Toy_infonew')
dbGetQuery(mydb, "DROP TABLE test;")
dbGetQuery(mydb, "DROP TABLE Toy_info;")
##5##
dbGetQuery(mydb,"CREATE TABLE test2 ( ToyInfo TEXT, price INTEGER, category_number INTEGER,  brand TEXT );")
dbGetQuery(mydb,"CREATE TABLE test3 ( ToyInfo TEXT, price INTEGER DEFAULT 0, category_number INTEGER,  brand TEXT );")
dbGetQuery(mydb,"INSERT INTO test3 (ToyInfo, price, category_number,brand) VALUES ('NA','1', '1','A');")
dbGetQuery(mydb,"INSERT INTO test3 (ToyInfo, brand) VALUES (NULL,'A');")
dbGetQuery(mydb, "SELECT * FROM test3;")
dbGetQuery(mydb, "DROP TABLE test3;")
dbGetQuery(mydb, "ALTER TABLE Toy_assessment ADD address INTEGER DEFAULT 3 ")
dbGetQuery(mydb, "SELECT * FROM Toy_assessment LIMIT 10;")
dbGetQuery(mydb, "ALTER TABLE Toy_assessment DROP COLUMN address;")
dbGetQuery(mydb, "SELECT * FROM Toy_assessment LIMIT 10;")
dbGetQuery(mydb,"CREATE TABLE test4 (
id INTEGER AUTO_INCREMENT PRIMARY KEY,
score INTEGER,
student TEXT
);")
dbGetQuery(mydb,"INSERT INTO test4 (score, student) VALUES (1, 'A');")
dbGetQuery(mydb,"INSERT INTO test4 (score, student) VALUES (5, 'B');")
dbGetQuery(mydb, "SELECT * FROM test4;")
dbGetQuery(mydb, "SELECT quality_level, factory_number FROM Toy_assessment WHERE quailty_level > 2 AND factory_number < 50000 ORDER BY factory_number DESC;")
dbGetQuery(mydb, "SELECT quality_level, factory_number FROM Toy_assessment WHERE quality_level > 2 AND factory_number < 50000 ORDER BY factory_number DESC;")
dbGetQuery(mydb, "SELECT price, category_number, brand FROM Toy_info WHERE brand LIKE 'A%';")
dbReadTable(mydb,'Toy_info')
dbGetQuery(mydb, "SELECT price, category_number, brand FROM Toy_infonew WHERE brand LIKE 'A%';")
dbGetQuery(mydb,"INSERT INTO Toy_infonew (ToyInfo, price, category_number,brand) VALUES ('NA','357', '3','Morgan');")
dbGetQuery(mydb, "SELECT DISTINCT brand FROM Toy_info;")
dbGetQuery(mydb, "SELECT DISTINCT brand FROM Toy_infonew;")
